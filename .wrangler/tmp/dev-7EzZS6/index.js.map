{
  "version": 3,
  "sources": ["file:///C:/Users/corful/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "file:///C:/Users/corful/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/loader-sw.ts", "file:///C:/Users/corful/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "file:///C:/Users/corful/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-fazZLa/middleware-insertion-facade.js", "../../../src/index.js"],
  "sourceRoot": "F:\\AI-web\\02\u591A\u7F51\u9875\u6E38\u620F\u7AD9\\project\\.wrangler\\tmp\\dev-7EzZS6",
  "sourcesContent": ["export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import {\n\t__facade_invoke__,\n\t__facade_register__,\n\t__facade_registerInternal__,\n\tAwaitable,\n\tDispatcher,\n\tIncomingRequest,\n\tMiddleware,\n} from \"./common\";\n\nexport { __facade_register__, __facade_registerInternal__ };\n\n// Miniflare 2's `EventTarget` follows the spec and doesn't allow exceptions to\n// be caught by `dispatchEvent`. Instead it has a custom `ThrowingEventTarget`\n// class that rethrows errors from event listeners in `dispatchEvent`.\n// We'd like errors to be propagated to the top-level `addEventListener`, so\n// we'd like to use `ThrowingEventTarget`. Unfortunately, `ThrowingEventTarget`\n// isn't exposed on the global scope, but `WorkerGlobalScope` (which extends\n// `ThrowingEventTarget`) is. Therefore, we get at it in this nasty way.\nlet __FACADE_EVENT_TARGET__: EventTarget;\nif ((globalThis as any).MINIFLARE) {\n\t__FACADE_EVENT_TARGET__ = new (Object.getPrototypeOf(WorkerGlobalScope))();\n} else {\n\t__FACADE_EVENT_TARGET__ = new EventTarget();\n}\n\nfunction __facade_isSpecialEvent__(\n\ttype: string\n): type is \"fetch\" | \"scheduled\" {\n\treturn type === \"fetch\" || type === \"scheduled\";\n}\nconst __facade__originalAddEventListener__ = globalThis.addEventListener;\nconst __facade__originalRemoveEventListener__ = globalThis.removeEventListener;\nconst __facade__originalDispatchEvent__ = globalThis.dispatchEvent;\n\nglobalThis.addEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.addEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalAddEventListener__(type, listener, options);\n\t}\n};\nglobalThis.removeEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.removeEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalRemoveEventListener__(type, listener, options);\n\t}\n};\nglobalThis.dispatchEvent = function (event) {\n\tif (__facade_isSpecialEvent__(event.type)) {\n\t\treturn __FACADE_EVENT_TARGET__.dispatchEvent(event);\n\t} else {\n\t\treturn __facade__originalDispatchEvent__(event);\n\t}\n};\n\ndeclare global {\n\tvar addMiddleware: typeof __facade_register__;\n\tvar addMiddlewareInternal: typeof __facade_registerInternal__;\n}\nglobalThis.addMiddleware = __facade_register__;\nglobalThis.addMiddlewareInternal = __facade_registerInternal__;\n\nconst __facade_waitUntil__ = Symbol(\"__facade_waitUntil__\");\nconst __facade_response__ = Symbol(\"__facade_response__\");\nconst __facade_dispatched__ = Symbol(\"__facade_dispatched__\");\n\nclass __Facade_ExtendableEvent__ extends Event {\n\t[__facade_waitUntil__]: Awaitable<unknown>[] = [];\n\n\twaitUntil(promise: Awaitable<any>) {\n\t\tif (!(this instanceof __Facade_ExtendableEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tthis[__facade_waitUntil__].push(promise);\n\t}\n}\n\ninterface FetchEventInit extends EventInit {\n\trequest: Request;\n\tpassThroughOnException: FetchEvent[\"passThroughOnException\"];\n}\n\nclass __Facade_FetchEvent__ extends __Facade_ExtendableEvent__ {\n\t#request: Request;\n\t#passThroughOnException: FetchEvent[\"passThroughOnException\"];\n\t[__facade_response__]?: Awaitable<Response>;\n\t[__facade_dispatched__] = false;\n\n\tconstructor(type: \"fetch\", init: FetchEventInit) {\n\t\tsuper(type);\n\t\tthis.#request = init.request;\n\t\tthis.#passThroughOnException = init.passThroughOnException;\n\t}\n\n\tget request() {\n\t\treturn this.#request;\n\t}\n\n\trespondWith(response: Awaitable<Response>) {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tif (this[__facade_response__] !== undefined) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"FetchEvent.respondWith() has already been called; it can only be called once.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tif (this[__facade_dispatched__]) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"Too late to call FetchEvent.respondWith(). It must be called synchronously in the event handler.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tthis.stopImmediatePropagation();\n\t\tthis[__facade_response__] = response;\n\t}\n\n\tpassThroughOnException() {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#passThroughOnException();\n\t}\n}\n\ninterface ScheduledEventInit extends EventInit {\n\tscheduledTime: number;\n\tcron: string;\n\tnoRetry: ScheduledEvent[\"noRetry\"];\n}\n\nclass __Facade_ScheduledEvent__ extends __Facade_ExtendableEvent__ {\n\t#scheduledTime: number;\n\t#cron: string;\n\t#noRetry: ScheduledEvent[\"noRetry\"];\n\n\tconstructor(type: \"scheduled\", init: ScheduledEventInit) {\n\t\tsuper(type);\n\t\tthis.#scheduledTime = init.scheduledTime;\n\t\tthis.#cron = init.cron;\n\t\tthis.#noRetry = init.noRetry;\n\t}\n\n\tget scheduledTime() {\n\t\treturn this.#scheduledTime;\n\t}\n\n\tget cron() {\n\t\treturn this.#cron;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\n__facade__originalAddEventListener__(\"fetch\", (event) => {\n\tconst ctx: ExecutionContext = {\n\t\twaitUntil: event.waitUntil.bind(event),\n\t\tpassThroughOnException: event.passThroughOnException.bind(event),\n\t};\n\n\tconst __facade_sw_dispatch__: Dispatcher = function (type, init) {\n\t\tif (type === \"scheduled\") {\n\t\t\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\t\t\tscheduledTime: Date.now(),\n\t\t\t\tcron: init.cron ?? \"\",\n\t\t\t\tnoRetry() {},\n\t\t\t});\n\n\t\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\t\t}\n\t};\n\n\tconst __facade_sw_fetch__: Middleware = function (request, _env, ctx) {\n\t\tconst facadeEvent = new __Facade_FetchEvent__(\"fetch\", {\n\t\t\trequest,\n\t\t\tpassThroughOnException: ctx.passThroughOnException,\n\t\t});\n\n\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\tfacadeEvent[__facade_dispatched__] = true;\n\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\n\t\tconst response = facadeEvent[__facade_response__];\n\t\tif (response === undefined) {\n\t\t\tthrow new Error(\"No response!\"); // TODO: proper error message\n\t\t}\n\t\treturn response;\n\t};\n\n\tevent.respondWith(\n\t\t__facade_invoke__(\n\t\t\tevent.request as IncomingRequest,\n\t\t\tglobalThis,\n\t\t\tctx,\n\t\t\t__facade_sw_dispatch__,\n\t\t\t__facade_sw_fetch__\n\t\t)\n\t);\n});\n\n__facade__originalAddEventListener__(\"scheduled\", (event) => {\n\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\tscheduledTime: event.scheduledTime,\n\t\tcron: event.cron,\n\t\tnoRetry: event.noRetry.bind(event),\n\t});\n\n\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n});\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport { __facade_registerInternal__ } from \"C:\\\\Users\\\\corful\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\loader-sw.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\corful\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\corful\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\t\t\t\t__facade_registerInternal__([__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default])", "export default {\r\n  async fetch(request, env, ctx) {\r\n    try {\r\n      const url = new URL(request.url);\r\n      \r\n      // \u5904\u7406 CORS\r\n      if (request.method === 'OPTIONS') {\r\n        return new Response(null, {\r\n          headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n            'Access-Control-Allow-Headers': 'Content-Type',\r\n          },\r\n        });\r\n      }\r\n\r\n      // \u83B7\u53D6\u8BC4\u8BBA\u5217\u8868\uFF0C\u652F\u6301\u6309 game \u67E5\u8BE2\r\n      if (request.method === 'GET' && url.pathname === '/api/comments') {\r\n        const game = url.searchParams.get('game');\r\n        let comments;\r\n        if (game) {\r\n          comments = await env.DB.prepare(\r\n            'SELECT * FROM comments WHERE game = ? ORDER BY created_at DESC'\r\n          ).bind(game).all();\r\n        } else {\r\n          comments = await env.DB.prepare(\r\n            'SELECT * FROM comments ORDER BY created_at DESC'\r\n          ).all();\r\n        }\r\n        return new Response(JSON.stringify(comments), {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n          },\r\n        });\r\n      }\r\n\r\n      // \u6DFB\u52A0\u65B0\u8BC4\u8BBA\uFF0C\u9700\u5E26 game \u5B57\u6BB5\r\n      if (request.method === 'POST' && url.pathname === '/api/comments') {\r\n        const { game, content, author } = await request.json();\r\n        if (!game || !content || !author) {\r\n          return new Response(JSON.stringify({ error: '\u7F3A\u5C11\u53C2\u6570' }), {\r\n            status: 400,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*',\r\n            },\r\n          });\r\n        }\r\n        // \u5185\u5BB9\u957F\u5EA6\u6821\u9A8C\r\n        if (content.length < 5 || content.length > 200) {\r\n          return new Response(JSON.stringify({ error: '\u8BC4\u8BBA\u5185\u5BB9\u97005~200\u5B57' }), {\r\n            status: 400,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*',\r\n            },\r\n          });\r\n        }\r\n        // \u9632\u5237\uFF1A\u540C\u4E00\u4F5C\u8005\u540C\u4E00\u6E38\u620F1\u5206\u949F\u53EA\u80FD\u53D11\u6761\r\n        const recent = await env.DB.prepare(\r\n          'SELECT * FROM comments WHERE game = ? AND author = ? AND created_at > datetime(\"now\", \"-1 minute\")'\r\n        ).bind(game, author).all();\r\n        if (recent.results && recent.results.length > 0) {\r\n          return new Response(JSON.stringify({ error: '\u8BF7\u52FF\u9891\u7E41\u8BC4\u8BBA' }), {\r\n            status: 429,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': '*',\r\n            },\r\n          });\r\n        }\r\n        await env.DB.prepare(\r\n          'INSERT INTO comments (game, content, author) VALUES (?, ?, ?)'\r\n        ).bind(game, content, author).run();\r\n        return new Response(JSON.stringify({ success: true }), {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n          },\r\n        });\r\n      }\r\n\r\n      // \u5904\u7406\u9996\u9875\r\n      if (request.method === 'GET' && url.pathname === '/') {\r\n        return new Response(`<!DOCTYPE html><html><body><h1>Worker \u6B63\u5E38\u8FD0\u884C</h1></body></html>`, {\r\n          headers: {\r\n            'Content-Type': 'text/html',\r\n            'Access-Control-Allow-Origin': '*',\r\n          },\r\n        });\r\n      }\r\n\r\n      return new Response('Not Found', { status: 404 });\r\n    } catch (error) {\r\n      return new Response(JSON.stringify({ error: error.message }), {\r\n        status: 500,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n      });\r\n    }\r\n  },\r\n};\r\n"],
  "mappings": ";;;;;;AAwBA,MAAM,wBAAsC,CAAC;AAKtC,WAAS,uBAAuB,MAAqC;AAC3E,0BAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAAA,EAC1C;AAFgB;AAGT,WAAS,+BACZ,MACF;AACD,0BAAsB,QAAQ,GAAG,KAAK,KAAK,CAAC;AAAA,EAC7C;AAJgB;AAMhB,WAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,UAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,UAAM,gBAAmC;AAAA,MACxC;AAAA,MACA,KAAK,YAAY,QAAQ;AACxB,eAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,MACtE;AAAA,IACD;AACA,WAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAAA,EAC7C;AAfS;AAiBF,WAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,WAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,MAC1D,GAAG;AAAA,MACH;AAAA,IACD,CAAC;AAAA,EACF;AAXgB;;;ACpChB,MAAI;AACJ,MAAK,WAAmB,WAAW;AAClC,8BAA0B,KAAK,OAAO,eAAe,iBAAiB,GAAG;AAAA,EAC1E,OAAO;AACN,8BAA0B,IAAI,YAAY;AAAA,EAC3C;AAEA,WAAS,0BACR,MACgC;AAChC,WAAO,SAAS,WAAW,SAAS;AAAA,EACrC;AAJS;AAKT,MAAM,uCAAuC,WAAW;AACxD,MAAM,0CAA0C,WAAW;AAC3D,MAAM,oCAAoC,WAAW;AAErD,aAAW,mBAAmB,SAAU,MAAM,UAAU,SAAS;AAChE,QAAI,0BAA0B,IAAI,GAAG;AACpC,8BAAwB;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD,OAAO;AACN,2CAAqC,MAAM,UAAU,OAAO;AAAA,IAC7D;AAAA,EACD;AACA,aAAW,sBAAsB,SAAU,MAAM,UAAU,SAAS;AACnE,QAAI,0BAA0B,IAAI,GAAG;AACpC,8BAAwB;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD,OAAO;AACN,8CAAwC,MAAM,UAAU,OAAO;AAAA,IAChE;AAAA,EACD;AACA,aAAW,gBAAgB,SAAU,OAAO;AAC3C,QAAI,0BAA0B,MAAM,IAAI,GAAG;AAC1C,aAAO,wBAAwB,cAAc,KAAK;AAAA,IACnD,OAAO;AACN,aAAO,kCAAkC,KAAK;AAAA,IAC/C;AAAA,EACD;AAMA,aAAW,gBAAgB;AAC3B,aAAW,wBAAwB;AAEnC,MAAM,uBAAuB,OAAO,sBAAsB;AAC1D,MAAM,sBAAsB,OAAO,qBAAqB;AACxD,MAAM,wBAAwB,OAAO,uBAAuB;AAE5D,MAAM,6BAAN,MAAM,oCAAmC,MAAM;AAAA,IA5E/C,OA4E+C;AAAA;AAAA;AAAA,IAC9C,CAAC,oBAAoB,IAA0B,CAAC;AAAA,IAEhD,UAAU,SAAyB;AAClC,UAAI,EAAE,gBAAgB,8BAA6B;AAClD,cAAM,IAAI,UAAU,oBAAoB;AAAA,MACzC;AACA,WAAK,oBAAoB,EAAE,KAAK,OAAO;AAAA,IACxC;AAAA,EACD;AAOA,MAAM,wBAAN,MAAM,+BAA8B,2BAA2B;AAAA,IA5F/D,OA4F+D;AAAA;AAAA;AAAA,IAC9D;AAAA,IACA;AAAA,IACA,CAAC,mBAAmB;AAAA,IACpB,CAAC,qBAAqB,IAAI;AAAA,IAE1B,YAAY,MAAe,MAAsB;AAChD,YAAM,IAAI;AACV,WAAK,WAAW,KAAK;AACrB,WAAK,0BAA0B,KAAK;AAAA,IACrC;AAAA,IAEA,IAAI,UAAU;AACb,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,YAAY,UAA+B;AAC1C,UAAI,EAAE,gBAAgB,yBAAwB;AAC7C,cAAM,IAAI,UAAU,oBAAoB;AAAA,MACzC;AACA,UAAI,KAAK,mBAAmB,MAAM,QAAW;AAC5C,cAAM,IAAI;AAAA,UACT;AAAA,UACA;AAAA,QACD;AAAA,MACD;AACA,UAAI,KAAK,qBAAqB,GAAG;AAChC,cAAM,IAAI;AAAA,UACT;AAAA,UACA;AAAA,QACD;AAAA,MACD;AACA,WAAK,yBAAyB;AAC9B,WAAK,mBAAmB,IAAI;AAAA,IAC7B;AAAA,IAEA,yBAAyB;AACxB,UAAI,EAAE,gBAAgB,yBAAwB;AAC7C,cAAM,IAAI,UAAU,oBAAoB;AAAA,MACzC;AAEA,WAAK,wBAAwB;AAAA,IAC9B;AAAA,EACD;AAQA,MAAM,4BAAN,MAAM,mCAAkC,2BAA2B;AAAA,IA/InE,OA+ImE;AAAA;AAAA;AAAA,IAClE;AAAA,IACA;AAAA,IACA;AAAA,IAEA,YAAY,MAAmB,MAA0B;AACxD,YAAM,IAAI;AACV,WAAK,iBAAiB,KAAK;AAC3B,WAAK,QAAQ,KAAK;AAClB,WAAK,WAAW,KAAK;AAAA,IACtB;AAAA,IAEA,IAAI,gBAAgB;AACnB,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,IAAI,OAAO;AACV,aAAO,KAAK;AAAA,IACb;AAAA,IAEA,UAAU;AACT,UAAI,EAAE,gBAAgB,6BAA4B;AACjD,cAAM,IAAI,UAAU,oBAAoB;AAAA,MACzC;AAEA,WAAK,SAAS;AAAA,IACf;AAAA,EACD;AAEA,uCAAqC,SAAS,CAAC,UAAU;AACxD,UAAM,MAAwB;AAAA,MAC7B,WAAW,MAAM,UAAU,KAAK,KAAK;AAAA,MACrC,wBAAwB,MAAM,uBAAuB,KAAK,KAAK;AAAA,IAChE;AAEA,UAAM,yBAAqC,gCAAU,MAAM,MAAM;AAChE,UAAI,SAAS,aAAa;AACzB,cAAM,cAAc,IAAI,0BAA0B,aAAa;AAAA,UAC9D,eAAe,KAAK,IAAI;AAAA,UACxB,MAAM,KAAK,QAAQ;AAAA,UACnB,UAAU;AAAA,UAAC;AAAA,QACZ,CAAC;AAED,gCAAwB,cAAc,WAAW;AACjD,cAAM,UAAU,QAAQ,IAAI,YAAY,oBAAoB,CAAC,CAAC;AAAA,MAC/D;AAAA,IACD,GAX2C;AAa3C,UAAM,sBAAkC,gCAAU,SAAS,MAAMA,MAAK;AACrE,YAAM,cAAc,IAAI,sBAAsB,SAAS;AAAA,QACtD;AAAA,QACA,wBAAwBA,KAAI;AAAA,MAC7B,CAAC;AAED,8BAAwB,cAAc,WAAW;AACjD,kBAAY,qBAAqB,IAAI;AACrC,YAAM,UAAU,QAAQ,IAAI,YAAY,oBAAoB,CAAC,CAAC;AAE9D,YAAM,WAAW,YAAY,mBAAmB;AAChD,UAAI,aAAa,QAAW;AAC3B,cAAM,IAAI,MAAM,cAAc;AAAA,MAC/B;AACA,aAAO;AAAA,IACR,GAfwC;AAiBxC,UAAM;AAAA,MACL;AAAA,QACC,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD,CAAC;AAED,uCAAqC,aAAa,CAAC,UAAU;AAC5D,UAAM,cAAc,IAAI,0BAA0B,aAAa;AAAA,MAC9D,eAAe,MAAM;AAAA,MACrB,MAAM,MAAM;AAAA,MACZ,SAAS,MAAM,QAAQ,KAAK,KAAK;AAAA,IAClC,CAAC;AAED,4BAAwB,cAAc,WAAW;AACjD,UAAM,UAAU,QAAQ,IAAI,YAAY,oBAAoB,CAAC,CAAC;AAAA,EAC/D,CAAC;;;AClOD,MAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,QAAI;AACH,aAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,IAC7C,UAAE;AACD,UAAI;AACH,YAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,gBAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,iBAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,UAAC;AAAA,QACtC;AAAA,MACD,SAAS,GAAG;AACX,gBAAQ,MAAM,4CAA4C,CAAC;AAAA,MAC5D;AAAA,IACD;AAAA,EACD,GAb8B;AAe9B,MAAO,6CAAQ;;;ACRf,WAAS,YAAY,GAAmB;AACvC,WAAO;AAAA,MACN,MAAM,GAAG;AAAA,MACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,MAC/B,OAAO,GAAG;AAAA,MACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,IAChE;AAAA,EACD;AAPS;AAUT,MAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,QAAI;AACH,aAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,IAC7C,SAAS,GAAQ;AAChB,YAAM,QAAQ,YAAY,CAAC;AAC3B,aAAO,SAAS,KAAK,OAAO;AAAA,QAC3B,QAAQ;AAAA,QACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,MAClD,CAAC;AAAA,IACF;AAAA,EACD,GAV8B;AAY9B,MAAO,2CAAQ;;;AC5BX,8BAA4B,CAAkB,4CAAyB,wCAAO,CAAC;;;ACHnF,MAAO,gBAAQ;AAAA,IACb,MAAM,MAAM,SAAS,KAAK,KAAK;AAC7B,UAAI;AACF,cAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAG/B,YAAI,QAAQ,WAAW,WAAW;AAChC,iBAAO,IAAI,SAAS,MAAM;AAAA,YACxB,SAAS;AAAA,cACP,+BAA+B;AAAA,cAC/B,gCAAgC;AAAA,cAChC,gCAAgC;AAAA,YAClC;AAAA,UACF,CAAC;AAAA,QACH;AAGA,YAAI,QAAQ,WAAW,SAAS,IAAI,aAAa,iBAAiB;AAChE,gBAAM,OAAO,IAAI,aAAa,IAAI,MAAM;AACxC,cAAI;AACJ,cAAI,MAAM;AACR,uBAAW,MAAM,IAAI,GAAG;AAAA,cACtB;AAAA,YACF,EAAE,KAAK,IAAI,EAAE,IAAI;AAAA,UACnB,OAAO;AACL,uBAAW,MAAM,IAAI,GAAG;AAAA,cACtB;AAAA,YACF,EAAE,IAAI;AAAA,UACR;AACA,iBAAO,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,YAC5C,SAAS;AAAA,cACP,gBAAgB;AAAA,cAChB,+BAA+B;AAAA,YACjC;AAAA,UACF,CAAC;AAAA,QACH;AAGA,YAAI,QAAQ,WAAW,UAAU,IAAI,aAAa,iBAAiB;AACjE,gBAAM,EAAE,MAAM,SAAS,OAAO,IAAI,MAAM,QAAQ,KAAK;AACrD,cAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ;AAChC,mBAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,2BAAO,CAAC,GAAG;AAAA,cACrD,QAAQ;AAAA,cACR,SAAS;AAAA,gBACP,gBAAgB;AAAA,gBAChB,+BAA+B;AAAA,cACjC;AAAA,YACF,CAAC;AAAA,UACH;AAEA,cAAI,QAAQ,SAAS,KAAK,QAAQ,SAAS,KAAK;AAC9C,mBAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,4CAAc,CAAC,GAAG;AAAA,cAC5D,QAAQ;AAAA,cACR,SAAS;AAAA,gBACP,gBAAgB;AAAA,gBAChB,+BAA+B;AAAA,cACjC;AAAA,YACF,CAAC;AAAA,UACH;AAEA,gBAAM,SAAS,MAAM,IAAI,GAAG;AAAA,YAC1B;AAAA,UACF,EAAE,KAAK,MAAM,MAAM,EAAE,IAAI;AACzB,cAAI,OAAO,WAAW,OAAO,QAAQ,SAAS,GAAG;AAC/C,mBAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,uCAAS,CAAC,GAAG;AAAA,cACvD,QAAQ;AAAA,cACR,SAAS;AAAA,gBACP,gBAAgB;AAAA,gBAChB,+BAA+B;AAAA,cACjC;AAAA,YACF,CAAC;AAAA,UACH;AACA,gBAAM,IAAI,GAAG;AAAA,YACX;AAAA,UACF,EAAE,KAAK,MAAM,SAAS,MAAM,EAAE,IAAI;AAClC,iBAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,GAAG;AAAA,YACrD,SAAS;AAAA,cACP,gBAAgB;AAAA,cAChB,+BAA+B;AAAA,YACjC;AAAA,UACF,CAAC;AAAA,QACH;AAGA,YAAI,QAAQ,WAAW,SAAS,IAAI,aAAa,KAAK;AACpD,iBAAO,IAAI,SAAS,qFAAiE;AAAA,YACnF,SAAS;AAAA,cACP,gBAAgB;AAAA,cAChB,+BAA+B;AAAA,YACjC;AAAA,UACF,CAAC;AAAA,QACH;AAEA,eAAO,IAAI,SAAS,aAAa,EAAE,QAAQ,IAAI,CAAC;AAAA,MAClD,SAAS,OAAO;AACd,eAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,MAAM,QAAQ,CAAC,GAAG;AAAA,UAC5D,QAAQ;AAAA,UACR,SAAS;AAAA,YACP,gBAAgB;AAAA,YAChB,+BAA+B;AAAA,UACjC;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;",
  "names": ["ctx"]
}
